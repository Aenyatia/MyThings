@using ToDoList.Components
@model SummaryViewModel

@{
	ViewData["Title"] = "Summary";
}

<div class="row">
	<!-- Tasks and categories -->
	<div class="col-lg-2 p-lg-3">
		@await Component.InvokeAsync(typeof(TasksViewComponent))
		<br />
		@await Component.InvokeAsync(typeof(CategoriesViewComponent))
	</div>

	<!-- Summary -->
	<partial model="@Model" name="_Summary" />

	<!-- Details -->
	<div class="col-lg-2 p-lg-3">
		<div id="detailsTab"></div>
	</div>
</div>

@section scripts{
	<script>
		$(document).ready(function () {

			// display details
			$("#activeItems li").on("click",
				function (e) {
					e.preventDefault();

					const detailsTab = $("#detailsTab");
					const itemId = $(e.target).data("task-id");

					detailsTab.children().remove();

					$.ajax({
						url: `api/tasks/${itemId}`,
						method: "GET",
					}).done(function (data) {
						const header = $("<h3></h3>").append("Details");
						const itemInfo = $("<ul></ul>", { class: "list-group" });

						itemInfo.append($("<li></li>", { class: "list-group-item" })
							.append(`Due data: ${data.dueDate || "-"}`));
						itemInfo.append($("<li></li>", { class: "list-group-item" })
							.append(`Priority: ${data.priority || "-"}`));
						itemInfo.append($("<li></li>", { class: "list-group-item" })
							.append(`Category: ${data.category || "-"}`));

						detailsTab.append(header).append(itemInfo);
					}).fail(function () {
						alert("Something failed.");
					});
				});

			// add category
			$("#categoryForm").on("submit",
				function (e) {
					e.preventDefault();

					const categoryName = $("#categoryName").val();

					$.ajax({
						url: "/api/categories",
						method: "POST",
						contentType: "application/json",
						data: JSON.stringify({
							"name": categoryName
						})
					}).done(function () {
						const link = $("<a></a>", { href: "#", class: "btn btn-outline-secondary btn-block" });

						link.append(categoryName);

						$("#categoriesList").append(link);
					}).fail(function () {
						alert("Something failed.");
					});
				});

			// add task
			$("#taskForm").on("submit",
				function () {
					const taskName = $("#taskName").val();

					$.ajax({
						url: "/api/tasks",
						method: "POST",
						contentType: "application/json",
						data: JSON.stringify({
							"name": taskName
						})
					}).done(function () {
						refresh();
					}).fail(function () {
						alert("Something failed.");
					});
				});

			const setNumberOfItems = function () {
				$.ajax({
					url: "api/tasks",
					method: "GET"
				}).done(function (data) {
					$("#today-items-cout").text(data.todayTasks);
					$("#tomorrow-items-count").text(data.tomorrowTasks);
					$("#later-items-count").text(data.laterTasks);
					$("#not-done-items-count").text(data.notDoneTasks);
					$("#history-items-count").text(data.historyTasks);
				}).fail(function () {
					alert("Something failed.");
				});
			};

			setNumberOfItems();
		});
	</script>
}
